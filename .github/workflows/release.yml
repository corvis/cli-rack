name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to be assigned for this release'
        required: true

jobs: 
  run:
    name: Release a new version
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: '${{ github.ref }}'
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -r requirements-dev.txt

    - name: Set new version
      run: |
        make set-version VERSION="${{ github.event.inputs.version }}"

    - name: Apply formatting, coppyright, lint
      run: make NO_VENV=True

    - name: Build packages
      run: make build NO_VENV=True

    - name: Publish packages
      run: make publish NO_VENV=True PYPI_API_KEY=${{ secrets.pypi_password }}

    - name: Changelog
      id: generate_changelog
      uses: scottbrenner/generate-changelog-action@v1.3.3
      with:
         package-dir: development/package.json
         to-tag: ${{ github.ref }}

    - name: Commit bumped version
      uses: EndBug/add-and-commit@v5
      with:
        author_name: Github Bot
        author_email: github@bot.com
        message: "Version bump and changelog update. New version is ${{ github.event.inputs.version }}"
        add: "./src/prana_rc/__version__.py CHANGELOG.md"
        push: true
        tag: "v${{ github.event.inputs.version }} --force"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Merge development -> master
      uses: devmasx/merge-branch@v1.3.1
      with:
        type: now
        from_branch: '${{ github.ref }}'
        target_branch: master
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'v${{ github.event.inputs.version }}'
        release_name: 'Version ${{ github.event.inputs.version }}'
        body: |
          ${{ steps.generate_changelog.outputs.changelog }}
        draft: false
        prerelease: true